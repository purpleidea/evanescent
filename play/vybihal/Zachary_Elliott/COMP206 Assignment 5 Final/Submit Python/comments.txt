James Conklin
Zachary Elliott
Lindsey Hewett
CS206 Group 18

The first thing I ran across when implementing the missing code in dt.py was that for some reason, I had to add explicit conditionals to check if now's date equaled the date passed as a parameter.
For some reason, neither lhs_datetime==now nor rhs_datetime==now would return true when they logically should. Hence, the code is a bit uglier, but unless I was testing the comparison of the two dates incorrectly, the way I wrote the functions was necessary to ensure accurate results.

Secondly, in the exclusions.conf.yaml.example file, I had to add single quotes around the time ranges because the ":" character confuses yaml and the time range needs to be specified as a string when passed to the is_time() function. One of the time ranges in the existing yaml file had quotes, but the others did not and caused yaml parsing errors, so I had to alter existing code to improve functionality.

Generally, as I read through many of the files in this project, I noticed a coherency and a consistency, with comments and with general coding style, which made for coming in from the outside and having to quickly understand the code easier. This will also be of great value as the project grows and develops since many other people will be able to work on the code. One thing I would have liked to have more commenting/explanation on was how is_excluded() uses the variables i and j to parse/go through the yaml file extracting hooks and passing their values to respective functions to determine whether the entry should define an exclusion or not.

One negative comment I have, which doesn't necessarily pertain to the existing code base per se but instead to how the code was bundled for distribution for this assignment, is that the evanescent.tar.bz2 was such a large folder that I had to drastically limit my current quota to even download the folder to my desktop. Plus, not all of the files that were given to us were needed for the assignment, which just took up a lot of space unnecessarily.

As for what I think about the specifics of the existing code base, I cannot really make any suggestions for betterment because of my very limited knowledge of python, yaml files, etc. As a whole, I whole-heartedly approve of the concept of evanescent and trust that the SOCS team working on it has already made the best decisions regarding the code.

Thank you for the opportunity to work on an open source project. We all learned a great deal!
